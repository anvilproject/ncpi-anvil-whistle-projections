def Condition(study, condition) {
    meta.tag[]: StudyMeta(study);
    resourceType: "Condition";
    identifier[]: BuildConditionIdentifier(study, condition.code, condition.subject_id);
    identifier[0].use: "official";
    //subject: Participants_Condition(participant)


// Function pass a condition at a time that returns a code.coding and code.text
  //  var coding: HarmonizeMapped(participant.condition[].code, "phenotype");
    //code.coding: coding;
    //code.text: participant.condition[].display;

    
}

def BuildConditionIdentifier(study, required condition_code, required subject_id) {
    $this: Key_Identifier(study, "Condition", $StrCat(subject_id, ".", condition_code));
}

//def Participants_Condition(participant) {
  //      reference: $StrCat("Patient","/",participant.subject_id)
    //}

def ProcessCondition(study, participant) {
    out condition: Condition(study, participant.condition[]);
}