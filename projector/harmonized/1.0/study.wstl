def Study(config, study_meta) {
    meta.tag[]: StudyMeta(config, study_meta);
    meta.profile[]: "https://nih-ncpi.github.io/ncpi-fhir-ig-2/StructureDefinition/ncpi-research-study";
    id: study_meta.external_id;
    resourceType: "ResearchStudy";
    title: study_meta.study_title;

    if (study_meta.parent_study_id?) {
        partOf[]: {
            reference: $StrCat("ResearchStudy","/",study_meta.parent_study_id)
        }
    }    

    var identifiers: $StrSplit(study_meta.external_id, "|");
    identifier[]: StudyIdentifier(config, identifiers[]);

    status: "active";

    var funding_sources: $StrSplit(study_meta.funding_source, "|");
    relatedArtifact[]: FundingArtifact(funding_sources[]);

    var principal_investigators: $StrSplit(study_meta.principal_investigator, "|");
    extension[]: PrincipalInvestigatorExtension(principal_investigators[]);
}


// If no curie, we assume it's ANVIL. Otherwise, we expect the curie to have a valid system from harmony ("study_curie")
def StudyIdentifier(config, identifier) {
    var SplitId: $StrSplit(identifier, ":");
    var orig_identifier: identifier;
    var stuff: SplitId;
    if $ListLen(SplitId) > 1 {
        var curie: SplitId[0];
        var identifier_only: SplitId[1];
        if curie ~= "ANVIL" {
            var system: HarmonizeAsSystem(curie, "study_curie");
        } else {
            var system: config.identifier-prefix;
            use: "official";
        }
    } else {
        var identifier_only: identifier;
        var system: config.identifier-prefix;
        use: "official";
    }
    value: identifier_only;
    system: system;
}

def FundingArtifact(funding) {
    if (funding?) {
    type: "documentation";
    label: "funding source";
    display: funding;
    }
}

def PrincipalInvestigatorExtension(pi) {
    if (pi?) {
        url: "https://nih-ncpi.github.io/ncpi-fhir-ig-2/StructureDefinition/research-study-associated-party";
        extension[0].valueString : pi;
        extension[0].url : "name";
        extension[1].url: "role";
        extension[1].valueCodeableConcept.coding[]: {
        system: "https://hl7.org/fhir/valueset-research-study-party-role.html"; 
        code: "primary-investigator";
    }
    }
}

def ProcessStudy(config, study_meta) {
    out research_study: Study(config, study_meta);
}